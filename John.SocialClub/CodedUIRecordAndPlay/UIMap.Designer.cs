// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUIRecordAndPlay
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RunApp - Use 'RunAppParams' to pass parameters into this method.
        /// </summary>
        public void RunApp()
        {

            // Launch '%windir%\System32\calc.exe'
            ApplicationUnderTest calcApplication = ApplicationUnderTest.Launch(this.RunAppParams.ExePath, this.RunAppParams.AlternateExePath);
        }
        
        /// <summary>
        /// AddOperands
        /// </summary>
        public void AddOperands()
        {
            #region Variable Declarations
            WinButton uIItem1Button = this.UICalculatorWindow.UIItemWindow.UIItem1Button;
            WinButton uIAddButton = this.UICalculatorWindow.UIItemWindow1.UIAddButton;
            WinButton uIEqualsButton = this.UICalculatorWindow.UIItemWindow2.UIEqualsButton;
            #endregion

            // Click '1' button
            Mouse.Click(uIItem1Button, new Point(22, 15));

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(17, 12));

            // Click '1' button
            Mouse.Click(uIItem1Button, new Point(15, 13));

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton, new Point(19, 40));
        }
        
        /// <summary>
        /// CheckResults - Use 'CheckResultsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckResults()
        {
            #region Variable Declarations
            WinText uIItem2Text = this.UICalculatorWindow.UIItem2Window.UIItem2Text;
            #endregion

            // Verify that the 'ControlType' property of '2' label equals '2'
            Assert.AreEqual(this.CheckResultsExpectedValues.UIItem2TextControlType, uIItem2Text.DisplayText.ToString());
        }
        
        #region Properties
        public virtual RunAppParams RunAppParams
        {
            get
            {
                if ((this.mRunAppParams == null))
                {
                    this.mRunAppParams = new RunAppParams();
                }
                return this.mRunAppParams;
            }
        }
        
        public virtual CheckResultsExpectedValues CheckResultsExpectedValues
        {
            get
            {
                if ((this.mCheckResultsExpectedValues == null))
                {
                    this.mCheckResultsExpectedValues = new CheckResultsExpectedValues();
                }
                return this.mCheckResultsExpectedValues;
            }
        }
        
        public UICalculatorWindow UICalculatorWindow
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private RunAppParams mRunAppParams;
        
        private CheckResultsExpectedValues mCheckResultsExpectedValues;
        
        private UICalculatorWindow mUICalculatorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RunApp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RunAppParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%windir%\System32\calc.exe'
        /// </summary>
        public string ExePath = "C:\\Windows\\System32\\calc.exe";
        
        /// <summary>
        /// Launch '%windir%\System32\calc.exe'
        /// </summary>
        public string AlternateExePath = "%windir%\\System32\\calc.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckResults'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class CheckResultsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of '2' label equals '2'
        /// </summary>
        public string UIItem2TextControlType = "2";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICalculatorWindow : WinWindow
    {
        
        public UICalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItem2Window UIItem2Window
        {
            get
            {
                if ((this.mUIItem2Window == null))
                {
                    this.mUIItem2Window = new UIItem2Window(this);
                }
                return this.mUIItem2Window;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItem2Window mUIItem2Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "131";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem1Button
        {
            get
            {
                if ((this.mUIItem1Button == null))
                {
                    this.mUIItem1Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem1Button.SearchProperties[WinButton.PropertyNames.Name] = "1";
                    this.mUIItem1Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem1Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "93";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "121";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIEqualsButton
        {
            get
            {
                if ((this.mUIEqualsButton == null))
                {
                    this.mUIEqualsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIEqualsButton.SearchProperties[WinButton.PropertyNames.Name] = "Equals";
                    this.mUIEqualsButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIEqualsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIEqualsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem2Window : WinWindow
    {
        
        public UIItem2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "150";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinText UIItem2Text
        {
            get
            {
                if ((this.mUIItem2Text == null))
                {
                    this.mUIItem2Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem2Text.SearchProperties[WinText.PropertyNames.Name] = "Result";
                    this.mUIItem2Text.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem2Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem2Text;
        #endregion
    }
}
